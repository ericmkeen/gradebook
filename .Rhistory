students_url <- 'https://docs.google.com/spreadsheets/d/15oGxUQv-xPzuw1Il7HGmtRqo66ye_JfJHMBNIsUAhAM/edit?usp=sharing'
update_roster('ENST_338', students_url) # rerun this each time your googlesheet is changed
# Quick view of students
view_students('ENST_338')
# Set wd to semester grading folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd(0)
getwd()
# Set wd to semester grading folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Set course ID
course_id <- 'ENST_421'
# Quick view of students
view_students('ENST_421')
setup_course(course_id)
# Students
students_url <- 'https://docs.google.com/spreadsheets/d/15oGxUQv-xPzuw1Il7HGmtRqo66ye_JfJHMBNIsUAhAM/edit?usp=sharing'
update_roster('ENST_421', students_url) # rerun this each time your googlesheet is changed
# Quick view of students
view_students('ENST_421')
# Students
students_url <- 'https://docs.google.com/spreadsheets/d/1aDxlmAOVC755NMsUWGIAVXEWZa5E6y_JTZgkMhB8S_8/edit?usp=sharing'
update_roster('ENST_421', students_url) # rerun this each time your googlesheet is changed
# Quick view of students
view_students('ENST_421')
# Get email-ready list of students
paste(view_students('ENST_421')$email, collapse=', ')
data(grade_scale1) ; grade_scale1
data(grade_scale2) ; grade_scale2
data(grade_scale3) ; grade_scale3
weeks <- c(    3,       4,        5,       6,      7,
10,       11,       12,      13,     14,
15,       16)
due_dates <- c('01-30', '02-06', '02-13', '02-20', '02-27',
'03-19', '03-26', '04-02', '04-09', '04-16',
'04-23', '04-30')
course_id <- 'ENST_421'
ass_cat <- 'Journal'
out_of <- 5
rubric <- NULL
share <- TRUE
weeks <- c(    3,       4,        5,       6,      7,
10,       11,       12,      13,     14,
15,       16)
due_dates <- c('01-30', '02-06', '02-13', '02-20', '02-27',
'03-19', '03-26', '04-02', '04-09', '04-16',
'04-23', '04-30')
for(i in 1:length(weeks)){
assignment(course_id = course_id, assignment_id = paste0('Week ', weeks[i], ' journal'),
assignment_category = ass_cat, out_of = out_of, due_date = paste0('2024-',due_dates[i]),
share = share, rubric = rubric)
}
data(grade_scale1) ; grade_scale1
data(grade_scale2) ; grade_scale2
(journal_rubric <- list('Four pages of thoughtful reflection on readings' = grade_scale2,
'Quiet place entry' = grade_scale2))
(journal_rubric <- list('Four pages of thoughtful reflection on readings' = grade_scale2,
'Quiet place entry' = grade_scale2))
weeks <- c(    3,       4,        5,       6,      7,
10,       11,       12,      13,     14,
15,       16)
due_dates <- c('01-30', '02-06', '02-13', '02-20', '02-27',
'03-19', '03-26', '04-02', '04-09', '04-16',
'04-23', '04-30')
for(i in 1:length(weeks)){
assignment(course_id = 'ENST_421',
assignment_id = paste0('Week ', stringr::str_pad(weeks[i], width=2, side='left', pad='0'), ' journal'),
assignment_category = 'Journal',
out_of = 5,
due_date = paste0('2024-',due_dates[i]),
share = TRUE,
rubric = journal_rubric)
}
data(grade_scale1) ; grade_scale1
data(grade_scale2) ; grade_scale2
data(grade_scale3) ; grade_scale3
(proposal_rubric <- list('Complete & on time' = grade_scale3,
'Quality & rigor of preparation/planning' = grade_scale1,
'Project feasability' = grade_scale3,
'Project ambition'  = grade_scale3,
'Project fit to student'  = grade_scale3,
'Quality of writing' = grade_scale2))
(proposal_rubric <- list('Complete & on time' = grade_scale3,
'Quality & rigor of preparation/planning' = grade_scale1,
'Project feasability' = grade_scale3,
'Project ambition'  = grade_scale3,
'Project fit to student'  = grade_scale3,
'Quality of writing' = grade_scale2))
assignment(course_id = 'ENST_421',
assignment_id = 'Proposal',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-01-30'),
share = TRUE,
rubric = proposal_rubric)
plot_assignment_calendar(course_id)
plot_assignment_weights(course_id)
(rubric <- list('Quality of content' = grade_scale3,
'Quality of writing' = grade_scale3,
'Professionalism / polish' = grade_scale1,
'Milestone goals met' = grade_scale1,
'Resourcefulness/ingenuity re: challenges'=grade_scale1))
(rubric <- list('Quality of content' = grade_scale3,
'Quality of writing' = grade_scale3,
'Professionalism / polish' = grade_scale1,
'Milestone goals met' = grade_scale1,
'Resourcefulness/ingenuity re: challenges'=grade_scale1))
assignment(course_id = 'ENST_421',
assignment_id = 'Milestone 1',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-02-20'),
share = TRUE,
rubric = rubric)
assignment(course_id = 'ENST_421',
assignment_id = 'Milestone 2',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-03-26'),
share = TRUE,
rubric = rubric)
plot_assignment_calendar(course_id)
plot_assignment_weights(course_id)
assignment(course_id = 'ENST_421',
assignment_id = 'Initial submission',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-04-16'),
share = TRUE,
rubric = NULL)
assignment(course_id = 'ENST_421',
assignment_id = 'Peer review',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-04-30'),
share = TRUE,
rubric = NULL)
assignment(course_id = 'ENST_421',
assignment_id = 'Presentation',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-04-30'),
share = TRUE,
rubric = NULL)
assignment(course_id = 'ENST_421',
assignment_id = 'Revised final submission',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-05-03'),
share = TRUE,
rubric = NULL)
plot_assignment_calendar(course_id)
plot_assignment_weights(course_id)
(grade_scale_hrs <- grade_scale1)
grade_scale_hrs$description <- c('< 1.5',
'1.6 - 2.5',
'2.6 - 3.5',
'3.6 - 4.5',
'> 4.5')
grade_scale_hrs
(rubric <- list('Average hours worked weekly' = grade_scale_hrs))
(rubric <- list('Average hours worked weekly' = grade_scale_hrs))
assignment(course_id = 'ENST_421',
assignment_id = 'Time log (midterm)',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-03-05'),
share = TRUE,
rubric = rubric)
assignment(course_id = 'ENST_421',
assignment_id = 'Time log at midterm',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-03-05'),
share = TRUE,
rubric = rubric)
assignment(course_id = 'ENST_421',
assignment_id = 'Time log at end',
assignment_category = 'Capstone',
out_of = 10,
due_date = paste0('2024-04-30'),
share = TRUE,
rubric = rubric)
plot_assignment_calendar(course_id)
plot_assignment_weights(course_id)
plot_assignment_calendar(course_id)
# Get a quick view of students
view_students('ENST_421')
# Get email-ready list of students
# (handy for copying and pasting into an email to write to your class)
paste(view_students('ENST_421')$email, collapse=', ')
# This command launches the grading app.
grade()
view_assignments('ENST_421') # View simple list of assignments
view_status('ENST_421') # get a master list of all assignments on file and the grades that are already complete.
# Anyone missing grades for an assignment already due?
view_missing('ENST_421', mode = 'simple')
# See which grades have not yet been shared by email
view_unshared('ENST_421')
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url)
# Get a quick view of students
view_students('ENST_421')
ezell_roster <- 'https://docs.google.com/spreadsheets/d/1aDxlmAOVC755NMsUWGIAVXEWZa5E6y_JTZgkMhB8S_8/edit?usp=sharing'
ezell <- gsheet::gsheet2tbl(ezell_roster)
watson_roster <- 'https://docs.google.com/spreadsheets/d/1ooFOhZV3h2KieLXOBa73jrpqG10-ioITBanG1NJJSh8/edit?usp=sharing'
watson <- gsheet::gsheet2tbl(watson_roster)
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url)
ezell_roster <- 'https://docs.google.com/spreadsheets/d/1aDxlmAOVC755NMsUWGIAVXEWZa5E6y_JTZgkMhB8S_8/edit?usp=sharing'
ezell <- gsheet::gsheet2tbl(ezell_roster) %>% select(goes_by, email)
# Set wd to folder housing this R script
library(dplyr)
library(ggplot2)
library(tidyr)
ezell_roster <- 'https://docs.google.com/spreadsheets/d/1aDxlmAOVC755NMsUWGIAVXEWZa5E6y_JTZgkMhB8S_8/edit?usp=sharing'
ezell <- gsheet::gsheet2tbl(ezell_roster) %>% select(goes_by, email)
watson_roster <- 'https://docs.google.com/spreadsheets/d/1ooFOhZV3h2KieLXOBa73jrpqG10-ioITBanG1NJJSh8/edit?usp=sharing'
watson <- gsheet::gsheet2tbl(watson_roster) %>% select(goes_by, email)
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url)
hourlog %>% head
hourlog %>% names
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:6)
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:5)
names(hourlog) <- c('email', 'date', 'hours', 'percent')
hourlog %>% head
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:5)
names(hourlog) <- c('email', 'date', 'hours', 'percent')
hourlog <-
hourlog %>%
mutate(hours = as.numeric(hours),
percent = as.numeric(percent),
adjusted = hours*percent) %>%
mutate(date = lubridate::as_date(date),
week_of_year = lubridate::week(date),
week_of_class = week_of_year - 2)
hourlog %>% head
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:5)
names(hourlog) <- c('email', 'date', 'hours', 'percent')
hourlog <-
hourlog %>%
mutate(hours = as.numeric(hours),
percent = as.numeric(percent),
adjusted = hours*percent) %>%
mutate(date = lubridate::as_date(date),
week_of_year = lubridate::week(date),
week_of_class = week_of_year - 2)
hourlog %>% head
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:5)
names(hourlog) <- c('email', 'date', 'hours', 'percent')
hourlog %>% head
hourlog <-
hourlog %>%
mutate(hours = as.numeric(hours),
percent = as.numeric(percent),
adjusted = hours*percent) %>%
mutate(date = lubridate::mdy(date),
week_of_year = lubridate::week(date),
week_of_class = week_of_year - 2)
hourlog %>% head
hourlog <-
hourlog %>%
mutate(hours = as.numeric(hours),
percent = as.numeric(percent),
adjusted = hours*percent) %>%
mutate(date = lubridate::mdy(date),
week_of_year = lubridate::week(date),
week_of_class = week_of_year - 2) %>%
left_join(ezell, by='email')
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:5)
names(hourlog) <- c('email', 'date', 'hours', 'percent')
hourlog <-
hourlog %>%
mutate(hours = as.numeric(hours),
percent = as.numeric(percent),
adjusted = hours*percent) %>%
mutate(date = lubridate::mdy(date),
week_of_year = lubridate::week(date),
week_of_class = week_of_year - 2) %>%
left_join(ezell, by='email')
hourlog %>% head
key <- rbind(ezell, watson)
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:5)
names(hourlog) <- c('email', 'date', 'hours', 'percent')
hourlog <-
hourlog %>%
mutate(hours = as.numeric(hours),
percent = as.numeric(percent),
adjusted = hours*percent) %>%
mutate(date = lubridate::mdy(date),
week_of_year = lubridate::week(date),
week_of_class = week_of_year - 2) %>%
left_join(key, by='email')
hourlog %>% head
log_url <- 'https://docs.google.com/spreadsheets/d/1-_kU1wazNZDTHf4t9FmLpP6HCK77Yhye_MW6-okc6n8/edit?usp=sharing'
hourlog <- gsheet::gsheet2tbl(log_url) %>% select(2:5)
names(hourlog) <- c('email', 'date', 'hours', 'percent')
hourlog <-
hourlog %>%
mutate(hours = as.numeric(hours),
percent = as.numeric(percent),
adjusted = hours*(percent/100)) %>%
mutate(date = lubridate::mdy(date),
week_of_year = lubridate::week(date),
week_of_class = week_of_year - 2) %>%
left_join(key, by='email')
hourlog %>% head
hourlog %>%
group_by(goes_by, week_of_class) %>%
summarize(weekly_total = sum(adjusted))
hourlog %>%
group_by(goes_by, week_of_class) %>%
summarize(weekly_total = sum(adjusted)) %>%
arrange(week_of_class, goes_by)
week_class <-
hourlog %>%
group_by(goes_by, week_of_class) %>%
summarize(weekly_total = sum(adjusted)) %>%
arrange(week_of_class, goes_by)
week_class <-
hourlog %>%
group_by(goes_by) %>%
arrange(date) %>%
mutate(running_total = cumsum(adjusted)) %>%
ungroup() %>%
group_by(goes_by, week_of_class) %>%
summarize(week_total = sum(adjusted),
week_running_total = sum(running_total)) %>%
arrange(goes_by, week_of_class)
weeklog <-
hourlog %>%
group_by(goes_by) %>%
arrange(date) %>%
mutate(running_total = cumsum(adjusted)) %>%
ungroup() %>%
group_by(goes_by, week_of_class) %>%
summarize(week_total = sum(adjusted),
week_running_total = sum(running_total)) %>%
arrange(goes_by, week_of_class)
weeklog %>% head
ggplot(weeklog,
aes(x=week_of_class,
y=week_running_total,
color = goes_by)) +
geom_path()
ggplotly(p)
library(plotly)
ggplotly(p)
plotly(p)
gg_plotly(p)
p <- ggplot(weeklog,
aes(x=week_of_class,
y=week_running_total,
color = goes_by)) +
geom_path()
ggplotly(p)
weeklog <-
hourlog %>%
group_by(goes_by) %>%
arrange(date) %>%
mutate(running_total = cumsum(adjusted)) %>%
ungroup() %>%
group_by(goes_by, week_of_class) %>%
summarize(week_total = round(sum(adjusted), 2),
week_running_total = round(sum(running_total), 2)) %>%
arrange(goes_by, week_of_class)
weeklog %>% head
p <- ggplot(weeklog,
aes(x=week_of_class,
y=week_running_total,
color = goes_by)) +
geom_path()
ggplotly(p)
weeklog <-
hourlog %>%
group_by(goes_by) %>%
arrange(date) %>%
mutate(running_total = cumsum(adjusted)) %>%
ungroup() %>%
group_by(goes_by, week_of_class) %>%
summarize(week_total = round(sum(adjusted), 2),
week_running_total = round(sum(running_total), 2)) %>%
mutate(weeks_to_date = week_of_class - 2) %>%
mutate(weekly_avg = week_running_total/ weeks_to_date) %>%
arrange(goes_by, week_of_class)
weeklog %>% head
weeklog <-
hourlog %>%
group_by(goes_by) %>%
arrange(date) %>%
mutate(running_total = cumsum(adjusted)) %>%
ungroup() %>%
group_by(goes_by, week_of_class) %>%
summarize(week_total = round(sum(adjusted), 2),
week_running_total = round(sum(running_total), 2)) %>%
mutate(weeks_to_date = week_of_class - 1) %>%
mutate(weekly_avg = week_running_total / weeks_to_date) %>%
arrange(goes_by, week_of_class)
weeklog %>% head
p <- ggplot(weeklog,
aes(x=week_of_class,
y=week_running_total,
color = goes_by)) +
geom_path()
ggplotly(p)
# This command launches the grading app.
grade()
?grade
# This version shows some PDF sizing options you can modify:
grade(wrap_rubric = 30,
pdf_height = 8)
# This version shows some PDF sizing options you can modify:
grade(wrap_rubric = 30,
pdf_height = 5)
document()
library(devtools)
document()
setwd("~/repos/gradebook")
document()
# Re-render all grades for a course.
# (really only helpful if the package version has been changed with new formatting bug fixes)
render_grades('ENST_421')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Re-render all grades for a course.
# (really only helpful if the package version has been changed with new formatting bug fixes)
render_grades('ENST_421')
setwd("~/repos/gradebook")
document()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Re-render all grades for a course.
# (really only helpful if the package version has been changed with new formatting bug fixes)
render_grades('ENST_421')
# This command launches the grading app.
# I suggest maximizing the window that pops open for better viewing.
grade()
# This command launches the grading app.
# I suggest maximizing the window that pops open for better viewing.
grade()
# This URL is to a GoogleSheet that you can use to maintain your roster.
# Go ahead and copy & paste it into a browser to see what it's like.
students_url <- 'https://docs.google.com/spreadsheets/d/1aDxlmAOVC755NMsUWGIAVXEWZa5E6y_JTZgkMhB8S_8/edit?usp=sharing'
update_roster('ENST_421', students_url)
# This command launches the grading app.
# I suggest maximizing the window that pops open for better viewing.
grade()
# Anyone missing grades for an assignment already due?
view_missing('ENST_421', mode = 'simple')
# See which grades have not yet been shared by email
view_unshared('ENST_421')
# Get summary of entire class ==================================================
final_grades <- render_class('ENST_421',
letter_key = 'default')
# View plot
final_grades$plot
# View table
final_grades$grades %>%
select(student, last_name, letter, current_grade) %>%
arrange(last_name)
# This URL is to a GoogleSheet that you can use to maintain your roster.
# Go ahead and copy & paste it into a browser to see what it's like.
students_url <- 'https://docs.google.com/spreadsheets/d/1ooFOhZV3h2KieLXOBa73jrpqG10-ioITBanG1NJJSh8/edit?usp=sharing'
# Install/update gradebook
remotes::install_github("ericmkeen/gradebook")
library(gradebook)
utils::packageVersion('gradebook')
# Set wd to folder housing this R script
library(dplyr)
library(ggplot2)
library(tidyr)
library(plotly)
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Set course ID
course_id <- 'ENST_421'
# View simple list of assignments produced by that setup file:
view_assignments('ENST_421')
# This URL is to a GoogleSheet that you can use to maintain your roster.
# Go ahead and copy & paste it into a browser to see what it's like.
students_url <- 'https://docs.google.com/spreadsheets/d/1aDxlmAOVC755NMsUWGIAVXEWZa5E6y_JTZgkMhB8S_8/edit?usp=sharing'
update_roster('ENST_421', students_url)
# Get a quick view of students
view_students('ENST_421')
# Anyone missing grades for an assignment already due?
view_missing('ENST_421', mode = 'simple')
# See which grades have not yet been shared by email
view_unshared('ENST_421')
# Email all unshared grades with a custom email body
# (You can't do this until you have gmailR setup.)
email_grades(course_id = 'ENST_421',
unshared_only = TRUE,
your_email = 'ekezell@sewanee.edu',
email_body =
"Attached you will find your journal grade for the week. Your journal is outside my door (Snowden 211A).\n\nBest wishes,\nProf. Ezell",
#"Attached you will find your grade on this assignment.\n\nBest wishes,\nProf. Ezell",
json_path = '/Users/ekezell/repos/credentials/desktop_gradebook.json')
# Email all unshared grades with a custom email body
# (You can't do this until you have gmailR setup.)
email_grades(course_id = 'ENST_421',
unshared_only = TRUE,
your_email = 'ekezell@sewanee.edu',
email_body =
"Attached you will find your journal grade for the week. Your journal is outside my door (Snowden 211A).\n\nBest wishes,\nProf. Ezell",
#"Attached you will find your grade on this assignment.\n\nBest wishes,\nProf. Ezell",
json_path = '/Users/ekezell/repos/credentials/desktop_gradebook.json')
